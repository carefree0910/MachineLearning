# Supplement
scikit-learn

# Requirements automatically generated by pigar.
# https://github.com/Damnever/pigar

# Util\CythonUtil.py: 11,32
Cython == 0.27.1

# Util\Bases.py: 10
Pillow == 9.0.1

# Util\Util.py: 5
imageio == 2.2.0

# NN\Basic\Networks.py: 5
# NN\PyTorch\Basic\Networks.py: 6,7
# NN\PyTorch\__Dev\Networks.py: 6
# NN\TF\Networks.py: 6,8
# Notebooks\NN\zh-cn\Util.py: 2
# Notebooks\SVM\zh-cn\Util.py: 2
# Opt\Test.py: 1
# RNN\Test\UnitTest.py: 4
# RNN\Wrapper.py: 2
# Util\Bases.py: 9,12
# Util\DataToolkit.py: 3
# Util\Util.py: 8,14
# Zhihu\NN\_extra\one\Networks.py: 1
# Zhihu\NN\_extra\two\Networks.py: 1
# Zhihu\NN\two\Network.py: 1
# _Dist\NeuralNetworks\Base.py: 16,18
# _Dist\NeuralNetworks\_Tests\Madelon\MadelonUtil.py: 8
# _Dist\NeuralNetworks\_Tests\Pruner\Base.py: 17,19
# _Dist\NeuralNetworks\_Tests\Pruner\Test.py: 8
# _Dist\NeuralNetworks\_Tests\TestUtil.py: 8
# _Dist\TextClassification\SkRun.py: 5
# _Dist\TextClassification\_NB.py: 6
# a_FirstExample\Regression.py: 2
# b_NaiveBayes\Original\GaussianNB.py: 7
# b_NaiveBayes\Original\MultinomialNB.py: 7
# b_NaiveBayes\Vectorized\GaussianNB.py: 7
# b_NaiveBayes\Vectorized\MultinomialNB.py: 7
# e_SVM\KP.py: 8
# e_SVM\TestSVM.py: 7
# f_NN\Networks.py: 7
# g_CNN\Networks.py: 7
# h_RNN\RNN.py: 10
matplotlib == 2.0.2

# NN\Basic\Layers.py: 1
numba == 0.35.0+0.g24edca2e0.dirty

# NN\Basic\Optimizers.py: 1
# NN\PyTorch\Auto\Networks.py: 5
# NN\PyTorch\Basic\Networks.py: 5
# NN\PyTorch\__Dev\Networks.py: 5
# NN\TF\Layers.py: 1
# Notebooks\NN\zh-cn\Util.py: 1
# Notebooks\SVM\zh-cn\Util.py: 1
# Opt\Functions.py: 1
# Opt\Methods.py: 3
# RNN\Generator.py: 1
# RNN\Test\UnitTest.py: 2
# RNN\Wrapper.py: 1
# Util\Bases.py: 7
# Util\CythonUtil.py: 3,4,5
# Util\DataToolkit.py: 1
# Util\Util.py: 6
# Zhihu\CvDTree\one\CvDTree.py: 3
# Zhihu\CvDTree\three\CvDTree.py: 4
# Zhihu\CvDTree\two\CvDTree.py: 3
# Zhihu\NN\Layers.py: 1
# Zhihu\NN\_extra\Optimizers.py: 1
# Zhihu\Python\metaclass_example2.py: 1
# Zhihu\RNN\Mnist.py: 3
# Zhihu\RNN\RNN.py: 1
# _Dist\ImageRecognition\Main.py: 7
# _Dist\ImageRecognition\ToolBox.py: 7
# _Dist\NeuralNetworks\Base.py: 14
# _Dist\NeuralNetworks\NNUtil.py: 5
# _Dist\NeuralNetworks\_Tests\Madelon\MadelonUtil.py: 7
# _Dist\NeuralNetworks\_Tests\Pruner\Advanced.py: 8
# _Dist\NeuralNetworks\_Tests\Pruner\Base.py: 15
# _Dist\NeuralNetworks\_Tests\Pruner\Test.py: 7
# _Dist\NeuralNetworks\_Tests\TestUtil.py: 7
# _Dist\NeuralNetworks\b_TraditionalML\MultinomialNB.py: 1,7
# _Dist\NeuralNetworks\b_TraditionalML\SVM.py: 7
# _Dist\NeuralNetworks\d_Traditional2NN\Toolbox.py: 7
# _Dist\NeuralNetworks\e_AdvancedNN\NN.py: 8
# _Dist\NeuralNetworks\g_DistNN\NN.py: 7
# _Dist\NeuralNetworks\h_RNN\RNN.py: 7
# _Dist\NeuralNetworks\i_CNN\CNN.py: 7
# _Dist\TextClassification\GenDataset.py: 3
# _Dist\TextClassification\SkRun.py: 4
# _Dist\TextClassification\_NB.py: 4
# a_FirstExample\Regression.py: 1
# b_NaiveBayes\Original\Basic.py: 7
# b_NaiveBayes\Vectorized\Basic.py: 7
# c_CvDTree\Cluster.py: 8
# c_CvDTree\Node.py: 7
# e_SVM\KP.py: 7
# e_SVM\LinearSVM.py: 7
# e_SVM\Perceptron.py: 7
# e_SVM\SVM.py: 7
# f_NN\Layers.py: 7
# f_NN\Optimizers.py: 7
# g_CNN\Layers.py: 7
# h_RNN\EmbedRNN.py: 7
# h_RNN\Mnist.py: 8
# h_RNN\Playground.py: 1
# h_RNN\RNN.py: 8
# h_RNN\SpRNN.py: 8
# i_Clustering\KMeans.py: 7
numpy == 1.13.3

# Opt\Methods.py: 6
# Util\DataToolkit.py: 2
# _Dist\NeuralNetworks\NNUtil.py: 7,9
scipy == 0.19.1

# NN\TF\Networks.py: 9,10
# NN\TF\Optimizers.py: 1
# RNN\Cell.py: 1,2,3
# RNN\Test\Mnist.py: 3
# RNN\Test\Operations.py: 2
# RNN\Test\UnitTest.py: 3,5,6
# Util\Bases.py: 8
# Util\Util.py: 7,10,11,12
# Zhihu\NN\Layers.py: 2
# Zhihu\NN\Optimizers.py: 1
# Zhihu\RNN\Mnist.py: 4
# Zhihu\RNN\RNN.py: 4
# _Dist\ImageRecognition\Main.py: 8
# _Dist\ImageRecognition\ToolBox.py: 8,9
# _Dist\NeuralNetworks\Base.py: 15
# _Dist\NeuralNetworks\NNUtil.py: 6
# _Dist\NeuralNetworks\_Tests\Pruner\Advanced.py: 9
# _Dist\NeuralNetworks\_Tests\Pruner\Base.py: 16
# _Dist\NeuralNetworks\b_TraditionalML\SVM.py: 8
# _Dist\NeuralNetworks\e_AdvancedNN\NN.py: 9
# _Dist\NeuralNetworks\g_DistNN\NN.py: 8
# _Dist\NeuralNetworks\h_RNN\Cell.py: 7,8
# _Dist\NeuralNetworks\h_RNN\RNN.py: 8
# _Dist\NeuralNetworks\i_CNN\CNN.py: 8
# e_SVM\LinearSVM.py: 8
# e_SVM\SVM.py: 8
# g_CNN\Layers.py: 8
# g_CNN\Optimizers.py: 7
# h_RNN\EmbedRNN.py: 8
# h_RNN\Mnist.py: 9
# h_RNN\RNN.py: 9,11
# h_RNN\SpRNN.py: 9
tensorflow_gpu == 1.4.0

# NN\PyTorch\Auto\Layers.py: 1,2
# NN\PyTorch\Optimizers.py: 1
# NN\PyTorch\__Dev\Layers.py: 1
# NN\PyTorch\__Dev\Networks.py: 8
# NN\PyTorch\__Dev\Optimizers.py: 1
# Util\Bases.py: 21,22
# e_SVM\LinearSVM.py: 18,19
# e_SVM\SVM.py: 16,17
torch == 0.2.1+a4fc05a

# Util\Timing.py: 2
wrapt == 1.10.10
